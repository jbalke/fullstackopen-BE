{"version":3,"sources":["components/Filter.js","components/notification.js","components/PersonForm.js","components/Persons.js","services/phonebook.js","App.js","index.js"],"names":["Filter","value","onChange","Notification","alert","className","level","message","PersonForm","onSubmit","nameRef","name","handleNameChange","number","handleNumberChange","ref","type","Persons","list","deleteHandler","style","listStyle","padding","map","person","key","id","onClick","axios","get","then","response","data","newPerson","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notification","setNotification","useEffect","a","phonebook","initialEntries","console","log","nameInputEl","useRef","clearForm","current","focus","showNotification","setTimeout","addPerson","e","preventDefault","existingPerson","find","trim","toLowerCase","window","confirm","updatedPersons","p","persistedPerson","listToShow","useMemo","includes","target","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3dd3b2a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <>\r\n    filter shown with <input value={value} onChange={onChange} />{\" \"}\r\n  </>\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ alert }) => {\r\n  return (\r\n    <div className={`notification ${alert && alert.level}`}>\r\n      {alert ? alert.message : \"\\u00A0\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({\r\n  onSubmit,\r\n  nameRef,\r\n  name,\r\n  handleNameChange,\r\n  number,\r\n  handleNumberChange\r\n}) => (\r\n  <form onSubmit={onSubmit}>\r\n    <div>\r\n      name: <input ref={nameRef} value={name} onChange={handleNameChange} />\r\n    </div>\r\n    <div>\r\n      number: <input value={number} onChange={handleNumberChange} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ list, deleteHandler }) => (\r\n  <ul style={{ listStyle: \"none\", padding: 0 }}>\r\n    {list\r\n      ? list.map(person => (\r\n          <li key={person.id}>\r\n            {person.name} {person.number}\r\n            <button onClick={deleteHandler(person.id)}>delete</button>\r\n          </li>\r\n        ))\r\n      : \"List empty\"}\r\n  </ul>\r\n);\r\n\r\nexport default Persons;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"/api/persons\";\r\n\r\nconst getAll = () => axios.get(BASE_URL).then(response => response.data);\r\n\r\nconst create = newPerson =>\r\n  axios.post(BASE_URL, newPerson).then(response => response.data);\r\n\r\nconst update = (id, newPerson) =>\r\n  axios.put(`${BASE_URL}/${id}`, newPerson).then(response => response.data);\r\n\r\nconst remove = id =>\r\n  axios.delete(`${BASE_URL}/${id}`).then(response => response.data);\r\n\r\nexport default { getAll, create, update, remove };\r\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport Filter from \"./components/Filter\";\r\nimport Notification from \"./components/notification\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport phonebook from \"./services/phonebook\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const initialEntries = await phonebook.getAll();\r\n        setPersons(initialEntries);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const nameInputEl = useRef(null);\r\n\r\n  const clearForm = () => {\r\n    setNewNumber(\"\");\r\n    setNewName(\"\");\r\n    nameInputEl.current.focus();\r\n  };\r\n\r\n  const showNotification = ({ level = \"info\", message = \"\" }) => {\r\n    setNotification({\r\n      level,\r\n      message\r\n    });\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const addPerson = async e => {\r\n    e.preventDefault();\r\n\r\n    let existingPerson = persons.find(\r\n      person =>\r\n        person.name.trim().toLowerCase() === newName.trim().toLowerCase()\r\n    );\r\n    if (existingPerson) {\r\n      let updatePerson = window.confirm(\r\n        `${existingPerson.name} is already in the phonebook, replace the old number with the new one?`\r\n      );\r\n      if (updatePerson) {\r\n        try {\r\n          await phonebook.update(existingPerson.id, {\r\n            number: newNumber\r\n          });\r\n\r\n          let updatedPersons = persons.map(person =>\r\n            person.id === existingPerson.id\r\n              ? { ...existingPerson, number: newNumber }\r\n              : person\r\n          );\r\n          setPersons(updatedPersons);\r\n          clearForm();\r\n          showNotification({\r\n            level: \"success\",\r\n            message: `${existingPerson.name} has been updated!`\r\n          });\r\n        } catch (error) {\r\n          showNotification({\r\n            level: \"error\",\r\n            message: \"This person has been removed from the server.\"\r\n          });\r\n          setPersons(persons.filter(p => p.id !== existingPerson.id));\r\n        }\r\n      }\r\n    } else {\r\n      const newPerson = {\r\n        name: newName.trim(),\r\n        number: newNumber.trim()\r\n      };\r\n      try {\r\n        let persistedPerson = await phonebook.create(newPerson);\r\n        const p = { ...newPerson, id: persistedPerson.id };\r\n        setPersons([...persons, p]);\r\n\r\n        showNotification({\r\n          level: \"success\",\r\n          message: `${newPerson.name} has been added!`\r\n        });\r\n        clearForm();\r\n      } catch (error) {\r\n        let {\r\n          response: {\r\n            data: { message }\r\n          }\r\n        } = error;\r\n        console.log(\"error:\", message);\r\n\r\n        showNotification({\r\n          level: \"error\",\r\n          message: message\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNameChange = e => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleNumberChange = e => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  const handleFilterChange = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const handlePersonDeletion = id => async () => {\r\n    let personToDelete = persons.find(p => p.id === id);\r\n    let deletePerson = window.confirm(`Delete ${personToDelete.name}?`);\r\n    if (deletePerson) {\r\n      try {\r\n        await phonebook.remove(id);\r\n        setPersons(persons.filter(person => person.id !== id));\r\n        showNotification({\r\n          level: \"success\",\r\n          message: `${personToDelete.name} removed!`\r\n        });\r\n      } catch (error) {\r\n        setPersons(persons.filter(p => p.id !== id));\r\n        showNotification({\r\n          level: \"error\",\r\n          message: \"This person had already been removed from the server.\"\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // useMemo not necessary in this case but wanted to avoid filtering on each render\r\n  const listToShow = useMemo(\r\n    () =>\r\n      filter\r\n        ? persons.filter(person =>\r\n            person.name.toLowerCase().includes(filter.trim().toLowerCase())\r\n          )\r\n        : persons,\r\n    [persons, filter]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification alert={notification} />\r\n      <Filter value={filter} onChange={handleFilterChange} />\r\n      <h2>add a new</h2>\r\n      <PersonForm\r\n        onSubmit={addPerson}\r\n        nameRef={nameInputEl}\r\n        name={newName}\r\n        handleNameChange={handleNameChange}\r\n        number={newNumber}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons list={listToShow} deleteHandler={handlePersonDeletion} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}